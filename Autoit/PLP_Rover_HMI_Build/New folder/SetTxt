                <![CDATA[Dim vYCord As Integer
'Option Explicit
Dim adoConn As ADODB.Connection         ' Database Connector

Dim vYCord As Integer
Dim vXCord As Integer
Dim vZCord As Integer
Dim vType As Integer

Private Sub StoreAction(vTagName As String, vEquipmentId As String, vOperation As String, vDescription As String, vUnits As String)
    On Error GoTo ErrorHandler
    Dim adoStr As String
    Dim UserId As String
    Dim TagName As String
    Dim Operation As String
    Dim Units As String
    Dim EquipmentId As String
    Dim Description As String
    Dim Computer As String
    Dim DateTime
    
    Dim vCount As Long
    
    'For vCount = 0 To 100000000
        'Pause
        'If IsNumeric(Elements.Item("TagValue").Value) Then
            'Exit For
        'End If
    'Next
    
    UserId = stdUserId.Value
    Computer = Environ("COMPUTERNAME")
    
    TagName = vTagName
    EquipmentId = vEquipmentId
    Description = vDescription
    Operation = vOperation
    Units = vUnits
    DateTime = Date + Time
        
    adoStr = "Insert Into dbo.TB_OP_Log (UserId,TagName,Description,EquipmentId,Units,Operation,DateTime,Computer) Values " & _
                "('" & UserId & "', '" & TagName & "', '" & Description & "', '" & EquipmentId & "', '" & Units & "', '" & Operation & "', '" & DateTime & "', '" & Computer & "')"
    
        Set adoConn = New ADODB.Connection                                          ' Create new Oracle ADO Connection object
        adoConn.Open LoadedDisplays.Item("(FRAME) P1f Header").gstrCONNECT_STRING
        adoConn.Execute (adoStr)
        
        Set adoConn = Nothing

Exit Sub
ErrorHandler: txtError.Caption = Err.Description
              'LogDiagnosticsMessage Me.FullName & ", " & Err.Description & ", " & ftDiagSeverityWarning
              Err.Clear
End Sub


Private Sub Display_Click()
    Call ClearData
    vDisplayName = Me.TagParameters(4)
    sCmd = "Display " & vDisplayName & " /T {-},{0},{-}"
    Me.Application.ExecuteCommand sCmd
End Sub
Private Sub ClearData()
    txtCmd.Caption = "-"
    txtRoverId.Caption = "0"
    txtPLC.Caption = "-"
End Sub

Private Sub ZoneSelected(vParameters As String)
On Error GoTo ErrorHandler
Dim vPLC As String
Dim vZoneIndex As String
Dim vMainTag As String
Dim vTagToWrite As String
Dim vDisplayName As String
Dim vRoverId As Integer
Dim vLocation As String
Dim vStart As Integer
Dim vEnd As Integer
Dim vLen As Integer
Dim vParameter As String
Dim sCmd As String
Dim Answer As Integer
Dim vTagName As String, vEquipmentId As String, vOperation As String, vDescription As String, vUnits As String
    
    vLen = Len(vParameters)
    vStart = 1
    
    If vLen > vStart Then
        vEnd = InStr(vStart, vParameters, ",")
        If vEnd > 0 Then
            vParameter = Mid(vParameters, vStart, vEnd - 1)
            vStart = vEnd + 1
        Else
            vParameter = Mid(vParameters, vStart, vLen)
            vStart = vLen
        End If
        vZoneIndex = vParameter
    End If
    
    If vLen > vStart Then
        vEnd = InStr(vStart, vParameters, ",")
        If vEnd > 0 Then
            vParameter = Mid(vParameters, vStart, vEnd - 1)
            vStart = vEnd + 1
        Else
            vParameter = Mid(vParameters, vStart, vLen)
            vStart = vLen
        End If
        vPLC = vParameter
    End If
    
    Set MyTagGroup = Application.CreateTagGroup(Me.AreaName)
    'Add tags to tag group
    vMainTag = "[" & vPLC & "]Zones[" & vZoneIndex & "]"
    vDisplayName = Me.Name
    
    If txtCmd.Caption = "MoveTo" Or txtCmd.Caption = "SetLocation" Or txtCmd.Caption = "PickupPallet" Or txtCmd.Caption = "DropPallet" Then
        vRoverId = txtRoverId.Caption
        MyTagGroup.Add "{" & vMainTag & ".Crd.X}"
        MyTagGroup.Add "{" & vMainTag & ".Crd.Y}"
        MyTagGroup.Add "{" & vMainTag & ".Crd.Z}"
        MyTagGroup.Add "{" & vMainTag & ".Type}"
        
        vXCord = MyTagGroup.Item("{" & vMainTag & ".Crd.X}").Value
        vYCord = MyTagGroup.Item("{" & vMainTag & ".Crd.Y}").Value
        vZCord = MyTagGroup.Item("{" & vMainTag & ".Crd.Z}").Value
        vLocation = Format(vXCord, "000") & "-" & Format(vYCord, "000") & "-" & Format(vZCord, "00")
        vType = MyTagGroup.Item("{" & vMainTag & ".Type}").Value
        
        If (txtCmd.Caption = "PickupPallet" Or txtCmd.Caption = "DropPallet") And (vType < 14 Or vType > 17) Then
            
            Answer = MsgBox("Rover Can't Drop Or Pickup Pallet At This Location", vbOKOnly + vbDefaultButton2, "Invalid Location")
        
        Else
        
            If txtCmd.Caption = "MoveTo" Then
                Answer = MsgBox("Move Rover " & vRoverId & " To Location " & vLocation & "?", vbQuestion + vbYesNo + vbDefaultButton2, "Confirm Message")
            ElseIf txtCmd.Caption = "PickupPallet" Then
                Answer = MsgBox("Pickup Pallet At Location " & vLocation & ", Rover " & vRoverId & "?", vbQuestion + vbYesNo + vbDefaultButton2, "Confirm Message")
            ElseIf txtCmd.Caption = "DropPallet" Then
                Answer = MsgBox("Drop Pallet At Location " & vLocation & ", Rover " & vRoverId & "?", vbQuestion + vbYesNo + vbDefaultButton2, "Confirm Message")
            Else
                Answer = MsgBox("Set Location " & vLocation & " To Rover " & vRoverId & "?", vbQuestion + vbYesNo + vbDefaultButton2, "Confirm Message")
            End If
            
            If Answer = vbYes Then
                vTagToWrite = "[" & txtPLC.Caption & "]RoverDta[" & txtRoverId.Caption & "]"
                If Me.TagParameters(1) = "MoveTo" Then
                    sCmd = "&Set {" & vTagToWrite & ".EndZoneOpr} """ & vLocation & """"
                    Me.Application.ExecuteCommand sCmd
                    vTagName = txtTagName.Caption & ".EndZoneOpr"
                    vOperation = sCmd
                    vDescription = "Move Rover To Location " & vLocation
                    sCmd = "&Set {" & vTagToWrite & ".CmdOpr} 91"
                    Me.Application.ExecuteCommand sCmd
                ElseIf Me.TagParameters(1) = "PickupPallet" Then
                    sCmd = "&Set {" & vTagToWrite & ".EndZoneOpr} """ & vLocation & """"
                    Me.Application.ExecuteCommand sCmd
                    vTagName = txtTagName.Caption & ".EndZoneOpr"
                    vOperation = sCmd
                    vDescription = "Pickup Pallet At Location " & vLocation
                    sCmd = "&Set {" & vTagToWrite & ".CmdOpr} 92"
                    Me.Application.ExecuteCommand sCmd
                ElseIf Me.TagParameters(1) = "DropPallet" Then
                    sCmd = "&Set {" & vTagToWrite & ".EndZoneOpr} """ & vLocation & """"
                    Me.Application.ExecuteCommand sCmd
                    vTagName = txtTagName.Caption & ".EndZoneOpr"
                    vOperation = sCmd
                    vDescription = "Drop Pallet At Location " & vLocation
                   sCmd = "&Set {" & vTagToWrite & ".CmdOpr} 93"
                    Me.Application.ExecuteCommand sCmd
                ElseIf Me.TagParameters(1) = "SetLocation" Then
                    sCmd = "&Set {" & vTagToWrite & ".LocSetOpr} """ & vLocation & """"
                    Me.Application.ExecuteCommand sCmd
                    vTagName = txtTagName.Caption & ".LocSetOpr"
                    vOperation = sCmd
                    vDescription = "Set Rover Location To " & vLocation
                End If
                
                vEquipmentId = txtEquipmentId.Caption & " - Rover " & txtRoverId.Caption
                vUnits = "--"
                
                Call StoreAction(vTagName, vEquipmentId, vOperation, vDescription, vUnits)
                
            ElseIf Answer = vbNo Then
            
            End If
            
        End If
        
        Call ClearData
        vDisplayName = Me.TagParameters(4)
        sCmd = "Display " & vDisplayName & " /T {-},{0},{-}"
        Me.Application.ExecuteCommand sCmd
        
    End If
    
    Set MyTagGroup = Nothing
    
Exit Sub
ErrorHandler: txtError.Caption = Err.Description
              'LogDiagnosticsMessage Me.FullName & ", " & Err.Description & ", " & ftDiagSeverityWarning
              Err.Clear
End Sub


Private Sub Display_AnimationStart()
    Dim vDisplayName As String
    
    vDisplayName = Me.Name
    
    
    If vDisplayName = bttMapSel1.ToolTipText & "_Set" Then
        plgMapSel1.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel2.ToolTipText & "_Set" Then
        plgMapSel2.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel3.ToolTipText & "_Set" Then
        plgMapSel3.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel4.ToolTipText & "_Set" Then
        plgMapSel4.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel5.ToolTipText & "_Set" Then
        plgMapSel5.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel6.ToolTipText & "_Set" Then
        plgMapSel6.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel7.ToolTipText & "_Set" Then
        plgMapSel7.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel8.ToolTipText & "_Set" Then
        plgMapSel8.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel9.ToolTipText & "_Set" Then
        plgMapSel9.BackColor = RGB(192, 192, 192)
    ElseIf vDisplayName = bttMapSel10.ToolTipText & "_Set" Then
        plgMapSel10.BackColor = RGB(192, 192, 192)
    End If
    
    
    If Me.TagParameters.Count >= 3 Then
        txtCmd.Caption = Me.TagParameters(1)
        txtRoverId.Caption = Me.TagParameters(2)
        txtPLC.Caption = Me.TagParameters(3)
    Else
        Me.Unload
    End If
End Sub

Private Sub MapSelected(vDisplayName As String)

    sCmd = "Display " & vDisplayName & "_Set /T {" & txtCmd.Caption & "},{" & txtRoverId.Caption & "},{" & txtPLC.Caption & "},{" & vDisplayName & "}"""
    Me.Application.ExecuteCommand sCmd

End Sub